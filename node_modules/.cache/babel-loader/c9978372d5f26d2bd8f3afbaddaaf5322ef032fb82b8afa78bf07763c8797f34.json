{"ast":null,"code":"var _jsxFileName = \"/Users/abhilashhathwar/Documents/GitHub/Youtube-Clone/src/components/SearchFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography } from \"@mui/material\";\nimport { Videos } from '../components';\nimport { fetchFromApi } from '../utils/fetchFromApi';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchFeed = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const {\n    searchTerm\n  } = useParams();\n  useEffect(() => {\n    fetchFromApi(`search?part=snippet&q=${searchTerm}`).then(data => {\n      setVideos(data.items);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    sx: {\n      overflow: 'auto',\n      height: '90vh',\n      flex: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      sx: {\n        color: 'white'\n      },\n      children: [\"Search results for: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 31\n      }, this), \" videos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Videos, {\n      videos: videos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchFeed, \"lUPIy5n9ZbN9wO2YLUQoCT4XmjA=\", false, function () {\n  return [useParams];\n});\n_c = SearchFeed;\nexport default SearchFeed;\nvar _c;\n$RefreshReg$(_c, \"SearchFeed\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Videos","fetchFromApi","useParams","SearchFeed","videos","setVideos","searchTerm","then","data","items","overflow","height","flex","color"],"sources":["/Users/abhilashhathwar/Documents/GitHub/Youtube-Clone/src/components/SearchFeed.jsx"],"sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { Box, Typography} from \"@mui/material\";\nimport {Videos} from '../components';\nimport { fetchFromApi } from '../utils/fetchFromApi';\nimport { useParams } from 'react-router-dom';\n\nconst SearchFeed = () => {\n  const [videos, setVideos] = useState([]);\n  const {searchTerm} = useParams();\n\n  useEffect(()=>{\n    fetchFromApi(`search?part=snippet&q=${searchTerm}`).then((data)=>{setVideos(data.items)})\n  },[])\n  return (\n    <Box p={2} sx={{overflow:'auto', height:'90vh', flex:2}}>\n        <Typography variant='h4' fontWeight='bold' sx={{color:'white'}}>\n          Search results for: <span style={{color:\"red\"}}>{searchTerm}</span> videos\n        </Typography>\n        <Videos videos={videos}/>\n    </Box>\n  )\n}\n\nexport default SearchFeed"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,SAASC,GAAG,EAAEC,UAAU,QAAO,eAAe;AAC9C,SAAQC,MAAM,QAAO,eAAe;AACpC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAACU;EAAU,CAAC,GAAGJ,SAAS,EAAE;EAEhCL,SAAS,CAAC,MAAI;IACZI,YAAY,CAAE,yBAAwBK,UAAW,EAAC,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAG;MAACH,SAAS,CAACG,IAAI,CAACC,KAAK,CAAC;IAAA,CAAC,CAAC;EAC3F,CAAC,EAAC,EAAE,CAAC;EACL,oBACE,QAAC,GAAG;IAAC,CAAC,EAAE,CAAE;IAAC,EAAE,EAAE;MAACC,QAAQ,EAAC,MAAM;MAAEC,MAAM,EAAC,MAAM;MAAEC,IAAI,EAAC;IAAC,CAAE;IAAA,wBACpD,QAAC,UAAU;MAAC,OAAO,EAAC,IAAI;MAAC,UAAU,EAAC,MAAM;MAAC,EAAE,EAAE;QAACC,KAAK,EAAC;MAAO,CAAE;MAAA,gDACzC;QAAM,KAAK,EAAE;UAACA,KAAK,EAAC;QAAK,CAAE;QAAA,UAAEP;MAAU;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD,eACb,QAAC,MAAM;MAAC,MAAM,EAAEF;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACvB;AAEV,CAAC;AAAA,GAfKD,UAAU;EAAA,QAEOD,SAAS;AAAA;AAAA,KAF1BC,UAAU;AAiBhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}