{"ast":null,"code":"var _jsxFileName = \"/Users/abhilashhathwar/Documents/GitHub/Youtube-Clone/src/components/Videos.jsx\";\nimport { Stack, Box } from \"@mui/material\";\nimport { VideoCard, ChannelCard } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Videos = _ref => {\n  let {\n    videos,\n    direction,\n    width\n  } = _ref;\n  if (!(videos !== null && videos !== void 0 && videos.length)) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: direction || 'row',\n    flexWrap: \"wrap\",\n    justifyContent: \"start\",\n    gap: 2,\n    sx: {\n      mt: 2\n    },\n    children: videos.map((video, idx) => {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [video.id.videoId && /*#__PURE__*/_jsxDEV(VideoCard, {\n          video: video,\n          width: width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 42\n        }, this), video.id.channelId && /*#__PURE__*/_jsxDEV(ChannelCard, {\n          channelDetail: video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 44\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["Stack","Box","VideoCard","ChannelCard","Videos","videos","direction","width","length","mt","map","video","idx","id","videoId","channelId"],"sources":["/Users/abhilashhathwar/Documents/GitHub/Youtube-Clone/src/components/Videos.jsx"],"sourcesContent":["import {Stack, Box} from \"@mui/material\";\nimport {VideoCard, ChannelCard} from \"../components\";\n\nconst Videos = ({videos, direction, width}) => {\n    if(!videos?.length) return 'Loading...'\n  return (\n    <Stack\n        direction={direction || 'row'}\n        flexWrap=\"wrap\"\n        justifyContent=\"start\"\n        gap={2}\n        sx={{mt:2}}\n    >\n        {videos.map((video, idx)=>{\n            return (\n                <Box key={idx}>\n                    {video.id.videoId && <VideoCard video={video} width={width}/>}\n                    {video.id.channelId && <ChannelCard channelDetail={video}/>}\n                </Box>\n            )\n        })}\n    </Stack>\n  )\n}\n\nexport default Videos"],"mappings":";AAAA,SAAQA,KAAK,EAAEC,GAAG,QAAO,eAAe;AACxC,SAAQC,SAAS,EAAEC,WAAW,QAAO,eAAe;AAAC;AAErD,MAAMC,MAAM,GAAG,QAAgC;EAAA,IAA/B;IAACC,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC;EACtC,IAAG,EAACF,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEG,MAAM,GAAE,OAAO,YAAY;EACzC,oBACE,QAAC,KAAK;IACF,SAAS,EAAEF,SAAS,IAAI,KAAM;IAC9B,QAAQ,EAAC,MAAM;IACf,cAAc,EAAC,OAAO;IACtB,GAAG,EAAE,CAAE;IACP,EAAE,EAAE;MAACG,EAAE,EAAC;IAAC,CAAE;IAAA,UAEVJ,MAAM,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAG;MACtB,oBACI,QAAC,GAAG;QAAA,WACCD,KAAK,CAACE,EAAE,CAACC,OAAO,iBAAI,QAAC,SAAS;UAAC,KAAK,EAAEH,KAAM;UAAC,KAAK,EAAEJ;QAAM;UAAA;UAAA;UAAA;QAAA,QAAE,EAC5DI,KAAK,CAACE,EAAE,CAACE,SAAS,iBAAI,QAAC,WAAW;UAAC,aAAa,EAAEJ;QAAM;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA,GAFrDC,GAAG;QAAA;QAAA;QAAA;MAAA,QAGP;IAEd,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEZ,CAAC;AAAA,KApBKR,MAAM;AAsBZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}